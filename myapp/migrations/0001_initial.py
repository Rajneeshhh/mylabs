# Generated by Django 5.0.6 on 2024-07-22 05:45

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=255, unique=True, verbose_name="email address"
                    ),
                ),
                ("name", models.CharField(max_length=30)),
                ("is_active", models.BooleanField(default=True)),
                ("is_admin", models.BooleanField(default=False)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=32)),
                ("number", models.TextField(max_length=13)),
                ("age", models.IntegerField()),
                ("email", models.TextField(max_length=32)),
                ("gender", models.CharField(max_length=10)),
                ("address", models.TextField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Phlabo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=32)),
                ("number", models.CharField(max_length=13)),
                ("email", models.CharField(max_length=32)),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("Admin", "Admin"),
                            ("Phlabo", "Phlabo"),
                            ("Super Admin", "Super Admin"),
                        ],
                        default="Phlabo",
                        max_length=16,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("active", "Active"), ("disable", "Disable")],
                        default="active",
                        max_length=7,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Tests",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("testName", models.TextField(max_length=64)),
                ("testCode", models.TextField(max_length=16)),
                ("price", models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name="Booking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("booking_date", models.DateTimeField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("confirmed", "Confirmed"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "visit_type",
                    models.CharField(
                        choices=[("home", "Home Visit"), ("lab", "Lab Visit")],
                        default="lab",
                        max_length=4,
                    ),
                ),
                ("total", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "discount",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                ("remarks", models.TextField(blank=True, null=True)),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="myapp.customer"
                    ),
                ),
                (
                    "phlabo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="myapp.phlabo"
                    ),
                ),
                ("tests", models.ManyToManyField(to="myapp.tests")),
            ],
        ),
    ]
